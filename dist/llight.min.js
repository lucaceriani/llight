const llight={debugEnabled:!1,isInitialized:!1,forId:[],update:(null,function(){let st=performance.now();const qa=e=>document.body.querySelectorAll(e);let firstTime=!llight.isInitialized;if(firstTime?llight.dbg("Called llight() first time!"):llight.dbg("Called llight()"),firstTime){for(let e of qa("[ll-for]"))e.setAttribute("ll-for-id",llight.forId.length),llight.forId.push(e.firstElementChild.cloneNode(!0));for(let e of qa("[ll-bind]"))e.addEventListener("input",llight.bind);for(let e of qa("[ll-\\@click]"))e.addEventListener("click",llight.click);for(let e of qa("[ll-\\@enter]"))e.addEventListener("keydown",llight.enter)}for(let node of qa("[ll-bind]")){let variable=eval(node.getAttribute("ll-bind"));node.value=variable}for(let node of qa("[ll-text]"))node.innerText=eval(node.getAttribute("ll-text"));for(let node of qa("[ll-for]")){let arr=eval(node.getAttribute("ll-for")),childId=parseInt(node.getAttribute("ll-for-id"));node.innerHTML="";for(let e of arr){let l=llight.forId[childId].cloneNode(!0);node.appendChild(l),(l.querySelector("[ll-for-here]")||l).innerText=e}}let et=performance.now();llight.dbg(`It took ${(et-st).toFixed(2)} ms`),llight.isInitialized=!0}),click:(null,function(e){let evalString=e.target.getAttribute("ll-@click");eval(evalString),llight.update()}),bind:(null,function(e){let variable=e.target.getAttribute("ll-bind");eval(`${variable} = ${JSON.stringify(e.target.value)}`),llight.update()}),enter:(null,function(e){"Enter"===e.key&&(eval(e.target.getAttribute("ll-@enter")),llight.update())}),dbg:(null,function(e){llight.debugEnabled&&console.log(e)})};document.addEventListener("DOMContentLoaded",llight.update);
